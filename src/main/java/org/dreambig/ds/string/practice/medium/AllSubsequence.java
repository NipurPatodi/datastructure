package org.dreambig.ds.string.practice.medium;

import org.dreambig.ds.picker.IQuestion;

import java.util.Arrays;
import java.util.List;

public class AllSubsequence implements IQuestion {

    @Override
    public String getQuestion(){
        return "Print all subsequences of a string Given a string, we have to find out all subsequences of it. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.\n" +
                "\n" +
                "Examples: \n" +
                "\n" +
                "Input : abc\n" +
                "Output : a, b, c, ab, bc, ac, abc\n" +
                "\n" +
                "Input : aaa\n" +
                "Output : a, aa, aaa";
    }
    @Override
    public List<String> getCompanies() {
        String []c=" ".split(" ");
        return Arrays.asList(c);
    }

    @Override
    public String getThingsToRemember() {
        return " This is power set approach. https://www.geeksforgeeks.org/print-subsequences-string/ ";
    }


    private String printSubSeq(String a, int bin, int n){
        String res="";
        for( int i =0;i<n;i++){

          // Most imp part check if bit is set at this Idx
          if((bin & (1<<i)) ==0){
            res+=a.charAt(i);
          }

        }
      return res;
    }

    public void printAllAubSequence(String a){
      int n = a.length();
      int perm= (int)Math.pow(2,n)-1;
      for ( int i=0; i<=perm;i++){
        System.out.println(printSubSeq(a, i,n));
      }

    }


    public static void main(String[] args) {
      AllSubsequence  as= new AllSubsequence ();
      as.printAllAubSequence("abcd");
    }



}
